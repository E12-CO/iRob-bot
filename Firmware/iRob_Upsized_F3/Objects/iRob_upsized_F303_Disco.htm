<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\iRob_upsized_F303_Disco.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\iRob_upsized_F303_Disco.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6220000: Last Updated: Wed Jan 29 13:08:22 2025
<BR><P>
<H3>Maximum Stack Usage =         48 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; app_robot_runner &rArr; app_io_manager_runner &rArr; app_io_manager_I2CRunner &rArr; lsm303dlhc_getMagData &rArr; i2c_writeRequest
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[65]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[44]">ADC4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from main.o(.text.BusFault_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1f]">CAN_RX1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[20]">CAN_SCE_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[45]">COMP1_2_3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[46]">COMP4_5_6_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[47]">COMP7_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[40]">DMA2_Channel2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[41]">DMA2_Channel3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[42]">DMA2_Channel4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[43]">DMA2_Channel5_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[12]">EXTI2_TSC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4b]">FPU_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from main.o(.text.HardFault_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from main.o(.text.MemManage_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from main.o(.text.NMI_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3a]">SPI3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from systick_millis.o(.text.SysTick_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4c]">SystemInit</a> from system_stm32f3xx.o(.text.SystemInit) referenced from startup_stm32f303xc.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3d]">TIM6_DAC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3e]">TIM7_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3b]">UART4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3c]">UART5_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from ros_usart.o(.text.USART1_IRQHandler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4a]">USBWakeUp_RMP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN_TX_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[48]">USB_HP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN_RX0_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[49]">USB_LP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from main.o(.text.UsageFault_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4d]">__main</a> from __main.o(!!!main) referenced from startup_stm32f303xc.o(.text)
 <LI><a href="#[4e]">adns5090_deselectSPI</a> from app_sensor_adns5090.o(.text.adns5090_deselectSPI) referenced 2 times from app_sensor_adns5090.o(.text.adns5090_getOdometry)
 <LI><a href="#[4e]">adns5090_deselectSPI</a> from app_sensor_adns5090.o(.text.adns5090_deselectSPI) referenced 6 times from app_sensor_adns5090.o(.text.adns5090_init)
 <LI><a href="#[4f]">adns5090_selectSPI</a> from app_sensor_adns5090.o(.text.adns5090_selectSPI) referenced 2 times from app_sensor_adns5090.o(.text.adns5090_getOdometry)
 <LI><a href="#[4f]">adns5090_selectSPI</a> from app_sensor_adns5090.o(.text.adns5090_selectSPI) referenced 6 times from app_sensor_adns5090.o(.text.adns5090_init)
 <LI><a href="#[50]">app_ros_comm_rxCallback</a> from app_ros_comm.o(.text.app_ros_comm_rxCallback) referenced 2 times from app_ros_comm.o(.text.app_ros_comm_init)
 <LI><a href="#[51]">l3gd20_deselectSPI</a> from app_sensor_l3gd20.o(.text.l3gd20_deselectSPI) referenced 2 times from app_sensor_l3gd20.o(.text.l3gd20_getGyroData)
 <LI><a href="#[51]">l3gd20_deselectSPI</a> from app_sensor_l3gd20.o(.text.l3gd20_deselectSPI) referenced 14 times from app_sensor_l3gd20.o(.text.l3gd20_init)
 <LI><a href="#[52]">l3gd20_selectSPI</a> from app_sensor_l3gd20.o(.text.l3gd20_selectSPI) referenced 2 times from app_sensor_l3gd20.o(.text.l3gd20_getGyroData)
 <LI><a href="#[52]">l3gd20_selectSPI</a> from app_sensor_l3gd20.o(.text.l3gd20_selectSPI) referenced 14 times from app_sensor_l3gd20.o(.text.l3gd20_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4d]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[55]"></a>__scatterload_rt2</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[96]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[97]"></a>__scatterload_loop</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[56]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[98]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, __scatter.o(!!handler_null), UNUSED)

<P><STRONG><a name="[99]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[5c]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[57]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[9a]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[a6]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[a7]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[a8]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[a9]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[aa]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[ab]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[ac]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[ad]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[ae]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[61]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[af]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[b0]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[b1]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[b2]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[b3]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[b4]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[b5]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[54]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b6]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[59]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5b]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[b7]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[5d]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; app_robot_runner &rArr; app_io_manager_runner &rArr; app_io_manager_I2CRunner &rArr; lsm303dlhc_getMagData &rArr; i2c_writeRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b8]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[66]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[60]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[b9]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[62]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>ADC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>COMP1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>COMP4_5_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>COMP7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USBWakeUp_RMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f303xc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ba]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[5f]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[bd]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[be]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[bf]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>ROSusart_checkTxComplete</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ros_usart.o(.text.ROSusart_checkTxComplete))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ros_comm_runner
</UL>

<P><STRONG><a name="[91]"></a>ROSusart_checkTxEmpty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ros_usart.o(.text.ROSusart_checkTxEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ros_comm_runner
</UL>

<P><STRONG><a name="[8f]"></a>ROSusart_init</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, ros_usart.o(.text.ROSusart_init))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ros_comm_init
</UL>

<P><STRONG><a name="[92]"></a>ROSusart_transmitData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ros_usart.o(.text.ROSusart_transmitData))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ros_comm_runner
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, systick_millis.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>SystemInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system_stm32f3xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ros_usart.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>adns5090_deselectSPI</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_sensor_adns5090.o(.text.adns5090_deselectSPI))
<BR>[Address Reference Count : 2]<UL><LI> app_sensor_adns5090.o(.text.adns5090_init)
<LI> app_sensor_adns5090.o(.text.adns5090_getOdometry)
</UL>
<P><STRONG><a name="[67]"></a>adns5090_getOdometry</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_sensor_adns5090.o(.text.adns5090_getOdometry))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = adns5090_getOdometry &rArr; spi_writeThenReadRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_writeThenReadRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_SPIRunner
</UL>

<P><STRONG><a name="[69]"></a>adns5090_init</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, app_sensor_adns5090.o(.text.adns5090_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = adns5090_init &rArr; spi_writeThenReadRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_getFSMBusy
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_writeThenReadRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_runner
</UL>

<P><STRONG><a name="[4f]"></a>adns5090_selectSPI</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_sensor_adns5090.o(.text.adns5090_selectSPI))
<BR>[Address Reference Count : 2]<UL><LI> app_sensor_adns5090.o(.text.adns5090_init)
<LI> app_sensor_adns5090.o(.text.adns5090_getOdometry)
</UL>
<P><STRONG><a name="[6b]"></a>app_io_manager_I2CRunner</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, app_io_manager.o(.text.app_io_manager_I2CRunner))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_io_manager_I2CRunner &rArr; lsm303dlhc_getMagData &rArr; i2c_writeRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303dlhc_convertMagEndianness
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303dlhc_getMagData
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303dlhc_getAccelData
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_getFSMBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_runner
</UL>

<P><STRONG><a name="[8e]"></a>app_io_manager_I2CTriggerNext</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_io_manager.o(.text.app_io_manager_I2CTriggerNext))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_runner
</UL>

<P><STRONG><a name="[70]"></a>app_io_manager_SPIRunner</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, app_io_manager.o(.text.app_io_manager_SPIRunner))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_io_manager_SPIRunner &rArr; adns5090_getOdometry &rArr; spi_writeThenReadRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adns5090_getOdometry
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l3gd20_applyOffset
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l3gd20_getGyroData
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_getFSMBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_runner
</UL>

<P><STRONG><a name="[8d]"></a>app_io_manager_SPITriggerNext</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_io_manager.o(.text.app_io_manager_SPITriggerNext))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_runner
</UL>

<P><STRONG><a name="[8c]"></a>app_io_manager_getI2CSensorDataReady</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_io_manager.o(.text.app_io_manager_getI2CSensorDataReady))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_runner
</UL>

<P><STRONG><a name="[8b]"></a>app_io_manager_getSPISensorDataReady</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_io_manager.o(.text.app_io_manager_getSPISensorDataReady))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_runner
</UL>

<P><STRONG><a name="[73]"></a>app_io_manager_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_io_manager.o(.text.app_io_manager_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_io_manager_init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_appInit
</UL>

<P><STRONG><a name="[76]"></a>app_io_manager_runner</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, app_io_manager.o(.text.app_io_manager_runner))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_io_manager_runner &rArr; app_io_manager_I2CRunner &rArr; lsm303dlhc_getMagData &rArr; i2c_writeRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_I2CRunner
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_SPIRunner
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adns5090_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l3gd20_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303dlhc_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ioPoll
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_ioPoll
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_runner
</UL>

<P><STRONG><a name="[7b]"></a>app_motor_control_commandMotor</STRONG> (Thumb, 422 bytes, Stack size 8 bytes, app_motor_control.o(.text.app_motor_control_commandMotor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_motor_control_commandMotor
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_pwm_updateCompare
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_runner
</UL>

<P><STRONG><a name="[7d]"></a>app_motor_control_doEncoder</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, app_motor_control.o(.text.app_motor_control_doEncoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_motor_control_doEncoder
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_qdec_getCount
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_runner
</UL>

<P><STRONG><a name="[89]"></a>app_motor_control_doPID</STRONG> (Thumb, 468 bytes, Stack size 0 bytes, app_motor_control.o(.text.app_motor_control_doPID))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_runner
</UL>

<P><STRONG><a name="[7f]"></a>app_motor_control_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_motor_control.o(.text.app_motor_control_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_motor_control_init &rArr; tim_qdec_init
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_pwm_init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_qdec_init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_appInit
</UL>

<P><STRONG><a name="[82]"></a>app_robot_appInit</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, app_robot_runner.o(.text.app_robot_appInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_robot_appInit &rArr; app_ros_comm_init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_gpioInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_motor_control_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ros_comm_init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>app_robot_gpioInit</STRONG> (Thumb, 342 bytes, Stack size 8 bytes, app_robot_runner.o(.text.app_robot_gpioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_robot_gpioInit
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_appInit
</UL>

<P><STRONG><a name="[87]"></a>app_robot_runner</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, app_robot_runner.o(.text.app_robot_runner))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_robot_runner &rArr; app_io_manager_runner &rArr; app_io_manager_I2CRunner &rArr; lsm303dlhc_getMagData &rArr; i2c_writeRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_motor_control_commandMotor
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_motor_control_doPID
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_motor_control_doEncoder
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_getI2CSensorDataReady
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_I2CTriggerNext
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_getSPISensorDataReady
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_SPITriggerNext
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_runner
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ros_comm_runner
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>app_ros_comm_init</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, app_ros_comm.o(.text.app_ros_comm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_ros_comm_init
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ROSusart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_appInit
</UL>

<P><STRONG><a name="[90]"></a>app_ros_comm_processRX</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, app_ros_comm.o(.text.app_ros_comm_processRX))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ros_comm_runner
</UL>

<P><STRONG><a name="[8a]"></a>app_ros_comm_runner</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, app_ros_comm.o(.text.app_ros_comm_runner))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_ros_comm_runner
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ros_comm_processRX
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ROSusart_transmitData
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ROSusart_checkTxComplete
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ROSusart_checkTxEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_runner
</UL>

<P><STRONG><a name="[50]"></a>app_ros_comm_rxCallback</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, app_ros_comm.o(.text.app_ros_comm_rxCallback))
<BR>[Address Reference Count : 1]<UL><LI> app_ros_comm.o(.text.app_ros_comm_init)
</UL>
<P><STRONG><a name="[83]"></a>clk_init</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, clk.o(.text.clk_init))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_appInit
</UL>

<P><STRONG><a name="[6c]"></a>i2c_getFSMBusy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2c.o(.text.i2c_getFSMBusy))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_I2CRunner
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303dlhc_init
</UL>

<P><STRONG><a name="[95]"></a>i2c_getSlaveNack</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, i2c.o(.text.i2c_getSlaveNack))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303dlhc_init
</UL>

<P><STRONG><a name="[75]"></a>i2c_init</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, i2c.o(.text.i2c_init))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_init
</UL>

<P><STRONG><a name="[7a]"></a>i2c_ioPoll</STRONG> (Thumb, 426 bytes, Stack size 0 bytes, i2c.o(.text.i2c_ioPoll))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_runner
</UL>

<P><STRONG><a name="[94]"></a>i2c_writeRequest</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, i2c.o(.text.i2c_writeRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_writeRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303dlhc_getMagData
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303dlhc_getAccelData
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsm303dlhc_init
</UL>

<P><STRONG><a name="[71]"></a>l3gd20_applyOffset</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, app_sensor_l3gd20.o(.text.l3gd20_applyOffset))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_SPIRunner
</UL>

<P><STRONG><a name="[51]"></a>l3gd20_deselectSPI</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_sensor_l3gd20.o(.text.l3gd20_deselectSPI))
<BR>[Address Reference Count : 2]<UL><LI> app_sensor_l3gd20.o(.text.l3gd20_init)
<LI> app_sensor_l3gd20.o(.text.l3gd20_getGyroData)
</UL>
<P><STRONG><a name="[72]"></a>l3gd20_getGyroData</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_sensor_l3gd20.o(.text.l3gd20_getGyroData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = l3gd20_getGyroData &rArr; spi_writeThenReadRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_writeThenReadRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_SPIRunner
</UL>

<P><STRONG><a name="[77]"></a>l3gd20_init</STRONG> (Thumb, 608 bytes, Stack size 24 bytes, app_sensor_l3gd20.o(.text.l3gd20_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = l3gd20_init &rArr; spi_writeThenReadRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_getFSMBusy
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_writeThenReadRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_runner
</UL>

<P><STRONG><a name="[52]"></a>l3gd20_selectSPI</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_sensor_l3gd20.o(.text.l3gd20_selectSPI))
<BR>[Address Reference Count : 2]<UL><LI> app_sensor_l3gd20.o(.text.l3gd20_init)
<LI> app_sensor_l3gd20.o(.text.l3gd20_getGyroData)
</UL>
<P><STRONG><a name="[6d]"></a>lsm303dlhc_convertMagEndianness</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_sensor_lsm303dlhc.o(.text.lsm303dlhc_convertMagEndianness))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_I2CRunner
</UL>

<P><STRONG><a name="[6f]"></a>lsm303dlhc_getAccelData</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_sensor_lsm303dlhc.o(.text.lsm303dlhc_getAccelData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lsm303dlhc_getAccelData &rArr; i2c_writeRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_writeRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_I2CRunner
</UL>

<P><STRONG><a name="[6e]"></a>lsm303dlhc_getMagData</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_sensor_lsm303dlhc.o(.text.lsm303dlhc_getMagData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lsm303dlhc_getMagData &rArr; i2c_writeRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_writeRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_I2CRunner
</UL>

<P><STRONG><a name="[78]"></a>lsm303dlhc_init</STRONG> (Thumb, 596 bytes, Stack size 24 bytes, app_sensor_lsm303dlhc.o(.text.lsm303dlhc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lsm303dlhc_init &rArr; i2c_writeRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_getSlaveNack
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_getFSMBusy
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_writeRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_runner
</UL>

<P><STRONG><a name="[5e]"></a>main</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = main &rArr; app_robot_runner &rArr; app_io_manager_runner &rArr; app_io_manager_I2CRunner &rArr; lsm303dlhc_getMagData &rArr; i2c_writeRequest
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_runner
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_appInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[88]"></a>millis</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, systick_millis.o(.text.millis))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_runner
</UL>

<P><STRONG><a name="[6a]"></a>spi_getFSMBusy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, spi.o(.text.spi_getFSMBusy))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_SPIRunner
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adns5090_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l3gd20_init
</UL>

<P><STRONG><a name="[74]"></a>spi_init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, spi.o(.text.spi_init))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_init
</UL>

<P><STRONG><a name="[79]"></a>spi_ioPoll</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, spi.o(.text.spi_ioPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_ioPoll
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_manager_runner
</UL>

<P><STRONG><a name="[68]"></a>spi_writeThenReadRequest</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, spi.o(.text.spi_writeThenReadRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_writeThenReadRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adns5090_getOdometry
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adns5090_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l3gd20_getGyroData
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l3gd20_init
</UL>

<P><STRONG><a name="[85]"></a>systick_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, systick_millis.o(.text.systick_init))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_robot_appInit
</UL>

<P><STRONG><a name="[81]"></a>tim_pwm_init</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, tim_pwm.o(.text.tim_pwm_init))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_motor_control_init
</UL>

<P><STRONG><a name="[7c]"></a>tim_pwm_updateCompare</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tim_pwm.o(.text.tim_pwm_updateCompare))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_motor_control_commandMotor
</UL>

<P><STRONG><a name="[7e]"></a>tim_qdec_getCount</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, tim_qdec.o(.text.tim_qdec_getCount))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_motor_control_doEncoder
</UL>

<P><STRONG><a name="[80]"></a>tim_qdec_init</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, tim_qdec.o(.text.tim_qdec_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tim_qdec_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_motor_control_init
</UL>

<P><STRONG><a name="[58]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[c2]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[c3]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
